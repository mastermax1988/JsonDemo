import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'java'
    id 'application'
}

sourceCompatibility = 11
targetCompatibility = 11

def mainClassName = "nqgy2.sep.jsondemo.Main"

application {
    mainClass.set(mainClassName)
}

group 'nqgy2.sep'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'com.google.code.gson:gson:2.8.8'
}

test {
    useJUnitPlatform()
}

task javaFxJar(type: Jar) {
    dependsOn compileJava
    //destinationDirectory = file("${rootDir}/releases")
    OperatingSystem operatingSystem = DefaultNativePlatform.currentOperatingSystem;
    if (operatingSystem.isWindows()) {
        archiveBaseName = "jsondemo-win"
    } else if (operatingSystem.isMacOsX()) {
        archiveBaseName = "jsondemo-osx"
    } else if (operatingSystem.isLinux()) {
        archiveBaseName = "jsondemo-linux"
    } else {
        archiveBaseName = "jsondemo"
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    from(sourceSets.main.output) {
        include "**"
        //exclude "**/TestServerClients.class"
        //exclude "**/client/Client.class"
        //exclude "**/view/*"
    }

    manifest {
        // a non-javafx main class is needed for jars
        attributes 'Main-Class': mainClassName
    }
}